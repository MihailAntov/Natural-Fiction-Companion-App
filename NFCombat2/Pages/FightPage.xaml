<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:views="clr-namespace:NFCombat2.Views"
             xmlns:helpers="clr-namespace:NFCombat2.Helpers"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:Class="NFCombat2.Pages.FightPage"
             Title="Fight Simulator">
    <Shell.TitleView>
        <Label
        Text="{Binding FightPageTitle}"
        TextColor="White"
        VerticalTextAlignment="Center"
        VerticalOptions="Center"
        HorizontalOptions="Center"
        HeightRequest="50"
        FontSize="Title"
        FontFamily="PlayRegular"/>
    </Shell.TitleView>

    <!--start-->
    <Grid VerticalOptions="Fill">
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="4*"/>
            <RowDefinition Height="8*"/>
            <RowDefinition Height="7*"/>
            <RowDefinition Height="8*"/>
            <RowDefinition Height="3*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <!--background-->
        <Image  Grid.RowSpan="6" Grid.ColumnSpan="3" Aspect="Fill" Margin="0" Source="background"/>
        <!--episode and exit-->
        <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="5" Text="{Binding EpisodeNumber}"></Label>
        <Button Grid.Row="0" Grid.Column="2" IsVisible="{Binding NotInCombat, Converter={helpers:InverseBoolConverter}}"
                Text="X"
                HorizontalOptions="End"
                Command="{Binding CancelCombatCommand}"
                SemanticProperties.Hint="Tap to cancel combat"
                />
        <!--player-->
        <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" IsVisible="{Binding NotInCombat, Converter={helpers:InverseBoolConverter}}">
            <Grid HorizontalOptions="Fill" VerticalOptions="Fill" Padding="10">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                
                <Label Grid.ColumnSpan="6" FontSize="Medium" FontAttributes="Bold" Text="{Binding Player.Name}" HorizontalTextAlignment="Center"/>
                
                <Image Grid.Row="1" Grid.Column="0" Source="healthcare">
                    <Image.Behaviors>
                        <toolkit:IconTintColorBehavior TintColor="Ivory" />
                    </Image.Behaviors>
                </Image>
                <Label Grid.Row="1" Grid.Column="1" VerticalTextAlignment="Center" Text="{Binding Player.Health}"/>
                
                <Image Grid.Row="1" Grid.Column="2" Source="fist">
                    <Image.Behaviors>
                        <toolkit:IconTintColorBehavior TintColor="Ivory" />
                    </Image.Behaviors>
                </Image>
                <Label Grid.Row="1" Grid.Column="3" VerticalTextAlignment="Center" Text="{Binding Player.Strength}" IsVisible="{Binding Fight.WeaponsContributeStrength}"/>
                <Label Grid.Row="1" Grid.Column="3" VerticalTextAlignment="Center" Text="{Binding Fight.PlayerStrength}" IsVisible="{Binding Fight.WeaponsContributeStrength, Converter={helpers:InverseBoolConverter}}"/>
                
                <Image Grid.Row="1" Grid.Column="4" Source="highvoltage" IsVisible="{Binding Player.Class, Converter={helpers:HackerConverter}}">
                    <Image.Behaviors>
                        <toolkit:IconTintColorBehavior TintColor="Ivory" />
                    </Image.Behaviors>
                </Image>
                <Label Grid.Row="1" Grid.Column="5" Text="{Binding Player.Overload}" VerticalTextAlignment="Center" IsVisible="{Binding Player.Class, Converter={helpers:HackerConverter}}"/>
                <!--<Label FontSize="Medium" FontAttributes="Bold" Text="{Binding Player.Name}"/>
    <Label>
        <Label.Text>
            <MultiBinding StringFormat="{}Hp:{0}">
                <Binding Path="Player.Health"/>
            </MultiBinding>
        </Label.Text>
    </Label>
    <HorizontalStackLayout>
        <Image Source="fist" WidthRequest="25" HeightRequest="25"/>
        <Label Text="{Binding Player.Strength}" IsVisible="{Binding Fight.WeaponsContributeStrength}"/>
        <Label Text="{Binding Fight.PlayerStrength}" IsVisible="{Binding Fight.WeaponsContributeStrength, Converter={helpers:InverseBoolConverter}}"/>
    </HorizontalStackLayout>-->
            </Grid>
        </Border>
        
        
        <!--enemies-->
        <ListView Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" ItemsSource="{Binding Enemies}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <ViewCell>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Row="0" Grid.ColumnSpan="6"  Text="{Binding Name}" HorizontalTextAlignment="Center"/>
                                <Image Grid.Row="1" Grid.Column="0" Source="healthcare">
                                    <Image.Behaviors>
                                        <toolkit:IconTintColorBehavior TintColor="Ivory" />
                                    </Image.Behaviors>
                                </Image>
                                <Label Grid.Row="1" Grid.Column="1" Text="{Binding Health}" IsVisible="{Binding Damageable}" HorizontalTextAlignment="Start" VerticalTextAlignment="Center"/>
                                <Image Grid.Row="1" Grid.Column="2" Source="fist">
                                    <Image.Behaviors>
                                        <toolkit:IconTintColorBehavior TintColor="Ivory" />
                                    </Image.Behaviors>
                                </Image>
                                <Label Grid.Row="1" Grid.Column="3" Text="{Binding Strength}" HorizontalTextAlignment="Start" VerticalTextAlignment="Center"/>

                                <Image Grid.Row="1" Grid.Column="4" Source="distance">
                                    <Image.Behaviors>
                                        <toolkit:IconTintColorBehavior TintColor="Ivory" />
                                    </Image.Behaviors>
                                </Image>
                                <Label Grid.Row="1" Grid.Column="5" Text="{Binding Distance}" HorizontalTextAlignment="Start" VerticalTextAlignment="Center"/>
                                
                            </Grid>
                    </ViewCell>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <!--combat log-->
        <Border Padding="8" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" IsVisible="{Binding NotInCombat, Converter={helpers:InverseBoolConverter}}">
            <CollectionView ItemsUpdatingScrollMode="KeepLastItemInView"
                ItemsSource="{Binding Messages}">
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <Label Text="{Binding}"/>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </Border>

        <!--options-->
        <views:OptionPickerView Padding="0" Grid.Row="4" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="3" BindingContext="{Binding OptionPickerViewModel}" IsVisible="{Binding NotInCombat, Converter={helpers:InverseBoolConverter}}"/>


        <!--pick episode-->
        <Border Grid.Row="1" Grid.ColumnSpan="3"  IsVisible="{Binding NotInCombat}">
            <Entry
             VerticalTextAlignment="Center"
            x:Name="EpisodeEntry"
            VerticalOptions="Center"
            Keyboard="Numeric"
            Text="{Binding EpisodeNumber}"
            SemanticProperties.Hint="Enter episode number"
            Placeholder="{Binding EpisodeEntryHint}"
            HorizontalOptions="Center" 
                HorizontalTextAlignment="Center"
            />  
        </Border>
        


        <Button 
            StyleClass="BigButton"
            Grid.Row="5" Grid.ColumnSpan="3" 
            Text="{Binding FindEpisodeButton}"
            IsVisible="{Binding NotInCombat}"
            Command="{Binding GetEpisodeCommand}"
            Clicked="HideKeyboard"
            SemanticProperties.Hint="Tap to find fight with the episode number input above"
            />
    </Grid>
    <!--end-->

    <!--<ScrollView>
        <VerticalStackLayout
        Spacing="25"
        Padding="30,0"
        VerticalOptions="StartAndExpand">

            <Button IsVisible="{Binding NotInCombat, Converter={helpers:InverseBoolConverter}}"
                    Text="X"
                    HorizontalOptions="End"
                    Command="{Binding CancelCombatCommand}"
                    SemanticProperties.Hint="Tap to cancel combat"
                    />




            <VerticalStackLayout IsVisible="{Binding NotInCombat, Converter={helpers:InverseBoolConverter}}">
                <Label FontSize="Medium" FontAttributes="Bold" Text="{Binding Player.Name}"/>
                <Label>
                    <Label.Text>
                        <MultiBinding StringFormat="{}Hp:{0}">
                            <Binding Path="Player.Health"/>
                        </MultiBinding>
                    </Label.Text>
                </Label>
                <HorizontalStackLayout>
                    <Image Source="fist" WidthRequest="25" HeightRequest="25"/>
                    <Label Text="{Binding Player.Strength}" IsVisible="{Binding Fight.WeaponsContributeStrength}"/>
                    <Label Text="{Binding Fight.PlayerStrength}" IsVisible="{Binding Fight.WeaponsContributeStrength, Converter={helpers:InverseBoolConverter}}"/>
                </HorizontalStackLayout>

            </VerticalStackLayout>
            <ListView ItemsSource="{Binding Enemies}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        --><!--<TextCell Text="{Binding Name}">
                            <TextCell.Detail>
                                <MultiBinding StringFormat="Hp:{0}  Distance:{1}">
                                    <Binding Path="Health"/>
                                    <Binding Path="Distance"/>
                                </MultiBinding>
                            </TextCell.Detail>
                        </TextCell>--><!--

                        <ViewCell>
                            <VerticalStackLayout Opacity="{Binding Health, Converter={helpers:OpacityConverter}}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="35"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="35"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Row="0" Grid.ColumnSpan="5"  Text="{Binding Name}"/>
                                    <Image Grid.Row="1" Grid.Column="0" Source="healthcare"/>
                                    <Label Grid.Row="1" Grid.Column="1" Text="{Binding Health}" IsVisible="{Binding Damageable}"/>
                                    <Image Grid.Row="1" Grid.Column="2" Source="distance"/>
                                    <Label Grid.Row="1" Grid.Column="3" Text="{Binding Distance}"/>
                                </Grid>
                            </VerticalStackLayout>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <Border Padding="5" MaximumHeightRequest="150" MinimumHeightRequest="150" IsVisible="{Binding NotInCombat, Converter={helpers:InverseBoolConverter}}">
                <CollectionView ItemsUpdatingScrollMode="KeepLastItemInView"
                    ItemsSource="{Binding Messages}">
                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <Label Text="{Binding}"/>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
            </Border>





            <views:OptionPickerView BindingContext="{Binding OptionPickerViewModel}" IsVisible="{Binding NotInCombat, Converter={helpers:InverseBoolConverter}}"/>

            <Entry
                x:Name="EpisodeEntry"
            IsVisible="{Binding NotInCombat}"
            Keyboard="Numeric"
            Text="{Binding EpisodeNumber}"
            SemanticProperties.Hint="Enter episode number"
            Placeholder="{Binding EpisodeEntryHint}"
            HorizontalOptions="Center" 
                />


            <Button 
                Text="{Binding FindEpisodeButton}"
                IsVisible="{Binding NotInCombat}"
                Command="{Binding GetEpisodeCommand}"
                Clicked="HideKeyboard"
                SemanticProperties.Hint="Tap to find fight with the episode number input above"
                />
        </VerticalStackLayout>
    </ScrollView>-->
</ContentPage>